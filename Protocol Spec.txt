All multibyte values are big-endian. All strings are UTF-8.

Game server registration

To register a server in the lobby, send a UDP packet to port 29944 of the lobby server. The server will stay in the list for 70 seconds, so sending a registration every 30 seconds will ensure that your server doesn't drop from the list if a packet is lost. Here is the format for the UDP packet:

+  0    Message type (UUID = b5dae2e8-424f-9ed0-0fcb-8c21c7ca1352)
+ 16    Server ID (UUID)
        A random, unique identification for this server. This will be used later to allow servers to register
        alternative endpoints (probably only used for IPv6 endpoints). This means the ID does not need
        to be persistent between server restarts, and can be generated at startup. This ID should be
        considered secret between the lobby and server, so don't pass it on - someone else could use
        it to e.g. constantly unregister your server, and later to compromise security protocols based
        on this ID.
+ 32    Lobby ID (UUID = 1ccf16b1-436d-856f-504d-cc1af306aaa7 for GG2 and its mods)
        This defines a kind of "community scope" of related games/mods
+ 48    Transport protocol (0=TCP, 1=UDP)
+ 49    Port number (uint16)
        If the transport protocol is TCP (the only option for now), this needs to be an open TCP port
        reachable from the lobby. You cannot run multiple servers on the same port. If the lobby
        receives a registration with the same IP, port and transport protocol as an existing server,
        the existing entry will be replaced.
        The port must not be 0 in TCP or UDP, since this is not a valid port number.
+ 51    Number of total player slots (uint16)
        How many actual players (not bots) can be in the game?
+ 53    Number of occupied player slots (uint16)
        How many actual players are in the game?
+ 55    Number of AI players (uint16)
        Note that bots+players can be greater than player slot count. If you want a fixed number
        of bots as well as a fixed maximum number of players per team, subtract the bot slots
        from the player slots.
+ 57    Flags (uint16)
        - :0    Password protected
        - rest  reserved
+ 59    Number of entries in key/value table (uint16)    
+ 61    key/value table
        Each entry consists of:
        + 0     key length (bytes) (uint8)
        + 1     key
        + n     value length (bytes) (uint16)
        + n+2   value

    There is a distinction between "specified" keys and "extension" keys. Specified keys have a
    fixed meaning, which allows them to be used for collecting statistic information or generic server
    browsers. Extension keys always start with "x-" to mark them as extension, e.g. "x-respawntime". Their
    meaning is not specified and any game can define its own extension keys. The prefix is supposed to
    prevent name clashes with new keys specified in the future.
    It is mandatory to provide a server name, all other keys are optional.
    
    The following specified keys exist:
    protocol_id:    A binary 16-byte UUID which can be used by clients to determine whether the server is
                    compatible and can be joined. This might be replaced with a more sophisticated system
                    later, since compatibility is sometimes one-way.
    name:           The server's plaintext identification (e.g. "Bacon Town 24/7").
    game:           The name of the game or mod this server is running. E.g. "Vindicator's Server Mod"
    game_short:     Abbreviated version of "game", for display in small space. E.g. "vinmod" or "gg2".
                    Should only be provided if "game" is present too. Can be left out if "game" is short
                    already.
    game_ver:       Short version string for the game, e.g. "v2.3.7b2"
    game_url:       URL with information about the game/mod
    map:            The map currently running on the server.
    

    
To unregister a server on shutdown:

In order to avoid having your server remain in the list for up to 70 seconds after it is shut down,
you can explicitly unregister a server using its ID. This is done with another UDP packet to port 29944:

+  0    Message type (UUID = 488984ac-45dc-86e1-9901-98dd1c01c064)
+ 16    Server ID (UUID)



Querying a list

In order to find out which servers are active in a particular lobby, open a TCP connection to port 29944 of the lobby server and send a short request as defined below. The lobby will answer with the requested information and then close the connection.

Client request:
+  0    Requested list protocol (UUID = 297d0df4-430c-bf61-640a-640897eaef57)
        Everything below here is only valid for this list protocol ID
+ 16    Requested lobby (UUID = 1ccf16b1-436d-856f-504d-cc1af306aaa7 for GG2 and its mods)

Lobby reply:
+  0    Server count (uint32_t)
+  4    Server list
        For each server:
        +  0    Server data block length (uint32)
        +  4    Transport protocol (0=TCP, 1=UDP)
        +  5    IPv4 endpoint port number (uint16, 0 if no IPv4 endpoint known)
        +  7    IPv4 address (4 bytes, ignore if port is 0)
        + 11    IPv6 endpoint port number (uint16, 0 if no IPv6 endpoint known)
        + 13    IPv6 address (16 bytes, ignore if port is 0)
        + 29    Number of total player slots (uint16)
        + 31    Number of occupied player slots (uint16)
        + 33    Number of AI players (uint16)
        + 35    Flags (uint16)
                - 31:0    Password protected
                - rest    reserved, ignore for now
        + 37    Number of entries in key/value table (uint16)    
        + 39    key/value table
                Each entry consists of:
                + 0     key length (bytes) (uint8_t)
                + 1     key
                + n     value length (bytes) (uint16_t)
                + n+2   value
